globals [
  ;; output
  totalFoyers
  totalSheeps
  totalCattles
  waterStock
  sheepsTempCamp
  cattlesTempCamp
  sheepsHaveLeft
  cattlesHaveLeft
  sheepsWeightGain
  cattlesWeightGain
  meanSheepsLiveWeight
  maxSheepsLiveWeight
  minSheepsLiveWeight
  meanCattlesLiveWeight
  maxCattlesLiveWeight
  minCattlesLiveWeight
  meanSheepsNEC
  meanCattlesNEC
  
  
  TotalGrass
  totalTrees
  meanGrass
  
  sumSmallHerder
  sumMediumHerder
  sumLargeHerder
]

to calculStat
  set totalFoyers count foyers
  
  set totalSheeps sum [head] of sheeps
  set totalCattles sum [head] of cattles
  set waterStock sum [water-stock] of patches
  set sheepsTempCamp count sheeps with [is-in-temporary-camp = true]
  set cattlesTempCamp count cattles with [is-in-temporary-camp = true]
  set sheepsHaveLeft count sheeps with [have-left = true]
  set cattlesHaveLeft count cattles with [have-left = true]
  set sheepsWeightGain mean [weight-gain] of sheeps
  set cattlesWeightGain mean [weight-gain] of cattles
  
  set meanCattlesLiveWeight mean [live-weight] of cattles with [have-left = false] / (mean [head]  of cattles with [have-left = false])
  let maxWeightCattleHerd [who] of cattles with [have-left = false] with-max [live-weight] 
  set maxCattlesLiveWeight [live-weight] of cattle first maxWeightCattleHerd / ([head] of cattle first maxWeightCattleHerd)
  let minWeightCattleHerd [who] of cattles with [have-left = false] with-min [live-weight] 
  set minCattlesLiveWeight [live-weight] of cattle first minWeightCattleHerd / ([head] of cattle first minWeightCattleHerd)
  
  set meanSheepsLiveWeight mean [live-weight] of sheeps with [have-left = false] / (mean [head]  of sheeps with [have-left = false])
  let maxWeightSheepHerd [who] of sheeps with [have-left = false] with-max [live-weight] 
  set maxSheepsLiveWeight [live-weight] of sheep first maxWeightSheepHerd / ([head] of sheep first maxWeightSheepHerd)
  let minWeightSheepHerd [who] of sheeps with [have-left = false] with-min [live-weight] 
  set minSheepsLiveWeight [live-weight] of sheep first minWeightSheepHerd / ([head] of sheep first minWeightSheepHerd)
  
  if count cattles with [have-left = false] > 0[ ;; Est-ce qu'il y a quelque chose a faire dans le else ?
    set meanCattlesNEC mean [corporal-condition] of cattles with [have-left = false]
  ]
  if count sheeps with [have-left = false] > 0 [ ;; Est-ce qu'il y a quelque chose a faire dans le else ?
    set meanSheepsNEC mean [corporal-condition] of sheeps with [have-left = false]
  ]
  set totalGrass sum [current-grass] of patches
  set meanGrass mean [current-grass] of patches
  set totalTrees sum [population-size] of tree-populations
  
  set sumSmallHerder count foyers with [herder-type = "petit"]
  set sumMediumHerder count foyers with [herder-type = "moyen"]
  set sumLargeHerder count foyers with [herder-type = "grand"]
end
