globals [
  ;; output
  totalFoyers
  totalSheeps
  totalCattles
  waterStock
  sheepsTempCamp
  cattlesTempCamp
  sheepsHaveLeft
  cattlesHaveLeft
  sheepsWeightGain
  cattlesWeightGain
  meanSheepsLiveWeight
  maxSheepsLiveWeight
  minSheepsLiveWeight
  meanCattlesLiveWeight
  maxCattlesLiveWeight
  minCattlesLiveWeight
  meanSheepsNEC
  meanCattlesNEC
  
  totalTrees8years
  totalTrees7years
  totalTrees6years
  totalTrees5years
  totalTrees4years
  totalTrees3years
  totalTrees2years
  totalTrees1years
  
  totalGrass
  totalTrees
  meanGrass
  meanFruitsConsumedCattle
  meanLeavesConsumedCattle
  meanFruitsConsumedSheep 
  meanLeavesConsumedSheep 
  
  sumSmallHerder
  sumMediumHerder
  sumLargeHerder
]

to calculStat
  set totalFoyers count foyers
  
  set totalSheeps sum [head] of sheeps
  set totalCattles sum [head] of cattles
  set waterStock sum [water-stock] of patches
  set sheepsTempCamp count sheeps with [is-in-temporary-camp = true]
  set cattlesTempCamp count cattles with [is-in-temporary-camp = true]
  set sheepsHaveLeft count sheeps with [have-left = true]
  set cattlesHaveLeft count cattles with [have-left = true]
  set sheepsWeightGain mean [weight-gain] of sheeps
  set cattlesWeightGain mean [weight-gain] of cattles
  
  set meanCattlesLiveWeight mean [live-weight] of cattles / mean [head]  of cattles
;  set maxCattlesLiveWeight max [max-live-weight] of cattles
  set maxCattlesLiveWeight 350
;  set minCattlesLiveWeight [min-live-weight] of cattles
  set minCattlesLiveWeight 66
  set meanSheepsLiveWeight mean [live-weight] of sheeps / mean [head]  of sheeps
;  set maxSheepsLiveWeight [max-live-weight] of sheeps
  set maxSheepsLiveWeight 80
;  set minSheepsLiveWeight [min-live-weight] of sheeps
  set minSheepsLiveWeight 21
  if count cattles with [have-left = false] > 0[ ;; Est-ce qu'il y a quelque chose a faire dans le else ?
    set meanCattlesNEC mean [corporal-condition] of cattles with [have-left = false]
  ]
  if count sheeps with [have-left = false] > 0 [ ;; Est-ce qu'il y a quelque chose a faire dans le else ?
    set meanSheepsNEC mean [corporal-condition] of sheeps with [have-left = false]
  ]
  set totalGrass sum [current-grass] of patches
  set meanGrass mean [current-grass] of patches
  set totalTrees sum [population-size] of tree-populations
  set totalTrees8years sum [population-size] of tree-populations with [tree-pop-age >= 8]
  set totalTrees7years sum [population-size] of tree-populations with [tree-pop-age = 7]
  
  set totalTrees6years sum [population-size] of tree-populations with [tree-pop-age = 6]
  set totalTrees5years sum [population-size] of tree-populations with [tree-pop-age = 5]
  set totalTrees4years sum [population-size] of tree-populations with [tree-pop-age = 4]
  set totalTrees3years sum [population-size] of tree-populations with [tree-pop-age = 3]
  set totalTrees2years sum [population-size] of tree-populations with [tree-pop-age = 2]
  set totalTrees1years sum [population-size] of tree-populations with [tree-pop-age = 1]
  
;  set meanFruitsConsumedCattle mean [fruits-consumed] of cattles with [have-left = false]
;  set meanLeavesConsumedCattle mean [leaves-consumed] of cattles with [have-left = false]
;  set meanFruitsConsumedSheep  mean [fruits-consumed] of sheeps with [have-left = false]
;  set meanLeavesConsumedSheep mean [leaves-consumed] of sheeps with [have-left = false]
  
  
  set sumSmallHerder count foyers with [herder-type = "petit"]
  set sumMediumHerder count foyers with [herder-type = "moyen"]
  set sumLargeHerder count foyers with [herder-type = "grand"]
end
